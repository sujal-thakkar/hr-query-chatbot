# render.yaml - Blueprint for deploying the HR Chatbot on Render

services:
  # Backend Service (FastAPI)
  - type: web
    name: backend
    env: docker
    repo: https://github.com/sujal-thakkar/hr-query-chatbot # <-- IMPORTANT: Update this to your repo URL
    dockerfilePath: ./backend/Dockerfile
    healthCheckPath: /health
    plan: free # <--- ADD THIS LINE
    envVars:
      # Declare these keys. Their values will be set in Render's dashboard.
      # Render will automatically treat them as secrets.
      - key: GEMINI_API_KEY
        sync: false # This tells Render the value is not in the repo, but will be set in the UI
      - key: OPENAI_API_KEY
        sync: false # This tells Render the value is not in the repo, but will be set in the UI
      # Cache backend (auto|redis|memory).
      - key: CACHE_BACKEND
        value: auto

  # Frontend Service (Streamlit)
  - type: web
    name: frontend
    env: docker
    repo: https://github.com/sujal-thakkar/hr-query-chatbot # <-- IMPORTANT: Update this to your repo URL
    dockerfilePath: ./frontend/Dockerfile
    plan: free # <--- ADD THIS LINE
    envVars:
      # Use the public backend host over HTTPS (Render terminates TLS). Port not needed for 443.
      - key: API_BASE
        value: https://${backend.host}
        # NOTE: If you prefer internal networking (same region) you can test with http://${backend.host}:${backend.port}
        # but some setups expose only the public hostname. Using https without port is most robust.